@startuml
/' Start UML Class '/

/' Flow Direction '/
left to right direction

/' Actor and Entity '/
actor Client << Human >> as C1
actor Client << Human >> as C2
actor Client << Human >> as C3
actor Responsable << Human >> as R1
actor Responsable << Human >> as R2
entity "Système bancaire" << System >> as Bank1
entity "Système bancaire" << System >> as Bank2
actor Livreur << Human >>
actor Pizzaiolo << Human >>
actor "Point de Vente" as PDV1
actor "Point de Vente" as PDV2
actor "Point de Vente" as PDV3

/' Ordering actor and entity '/
C1 -[hidden] PDV1
PDV1 -[hidden] PDV2
PDV2 -[hidden] R1
R1 -[hidden] Pizzaiolo
Pizzaiolo -[hidden] Livreur
Livreur -[hidden] R2
R2 -[hidden] PDV3
PDV3 -[hidden] C2
C2 -[hidden] C3

/' UseCase Relationship '/

/' Effectuer une commande de Pizza '/
(Effectuer une commande de Pizza) as (setOrder)
C1 --> (setOrder) : Web
PDV1 --> (setOrder) : PDV, Téléphone

/' Consulter une commande de Pizza '/
(Consulter une commande de Pizza) as (getOrder)
PDV2 --> (getOrder) : (liste du PDV)
R1 --> (getOrder) : liste par PDV

/' Préparer une commande de Pizza '/
(Préparer une commande de Pizza) as (setPrepare)
Pizzaiolo --> (setPrepare) : changement statut

/' Effectuer une livraison de Pizza '/
(Effectuer une livraison de Pizza) as (setDelivery)
Livreur --> (setDelivery) : changement statut

/' Consulter une livraison de Pizza '/
(Consulter une livraison de Pizza) as (getDelivery)
R2 --> (getDelivery) : (liste par PDV)
PDV3 --> (getDelivery) : (liste du PDV)

/' Effectuer un paiement '/
(Effectuer un paiement) as (setPayment)
C2 --> (setPayment) : Web ou PDV
Bank1 <|. (setPayment) : Débit

/' Annuler une commande '/
(Annuler une commande) as (delOrder)
C3 --> (delOrder) : Web ou PDV
Bank2 <|. (delOrder) : Crédit

/' End UML Class '/
@enduml