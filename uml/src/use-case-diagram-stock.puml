@startuml
/' Start UML Class '/

/' Flow Direction '/
left to right direction

/' Actor and Entity '/
"Responsable" << Human >> as R1
"Responsable" << Human >> as R2
"Responsable" << Human >> as R3
"Pizzaiolo" << Human >> as P1
"Pizzaiolo" << Human >> as P2
:Point de Vente: << Human >> as PDV1

entity "Système bancaire" << System >> as Bank1
entity "Site Web" << System >> as Web1
entity "Site Web" << System >> as Web2

/' Ordering actor and entity '/
P1 -[hidden] Web1
Web1 -[hidden] P2
P2 -[hidden] Web2
Web2 -[hidden] R1
R1 -[hidden] R2
R2 -[hidden] R3
R3 -[hidden] PDV1

/' UseCase Relationship '/

/' Consulter les recettes de pizzas '/
(Consulte toutes les recettes de pizzas) as (getAllRecipe)
P1 --> (getAllRecipe)
Web1 --> (getAllRecipe)

/' Consulter la liste des pizzas préparables '/
(Consulte la liste des pizzas préparables) as (getAvailableRecipe)
P2 --> (getAvailableRecipe)
Web2 --> (getAvailableRecipe)

/' Consulter le stock des ingrédients par PDV '/
(Consulte le stock du point de vente) as (getStock)
R1 --> (getStock)

/' Passer une commande d'ingrédients '/
(Passe une commande d'ingrédients) as (setSupplyOrder)
R2 --> (setSupplyOrder)

/' Consulter une commande d'ingrédients '/
(Consulte une commande d'ingrédients) as (getSupplyOrder)
R3 --> (getSupplyOrder)

/' Receptionner une commande d'ingrédients '/
(Receptionne une commande d'ingrédients) as (setStock)
(setStock) <.. Bank1 : Débit
PDV1 --> (setStock)

/' End UML Class '/
@enduml